{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Микросервис является proxy между CDI и внешними системами. Микросервис получает запросы от внешних систем и передает их в систему CDI. При передаче данные конвертируются в формат CDI, ответ от CDI так же конвертируется.",
        "title": "Микросервис Клиенты (stage)",
        "contact": {},
        "version": "1.0"
    },
    "host": "10.233.36.14:8000",
    "basePath": "/",
    "paths": {
        "/closeAttribute": {
            "post": {
                "description": "## Внимание!\n\n## Метод работает, но больше не поддерживается.\n\n**Переходите на использование соответствующего метода из группы /party/**\n\n---\n\n\nВызывает CDI-метод \"closeAttribute\". Метод позволяет закрыть атрибут клиента по его hid.",
                "tags": [
                    "Cards"
                ],
                "summary": "Закрыть атрибут клиента по его hid",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "Информация по атрибуту",
                        "name": "Counterparty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/close.CloseAttributeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/closeAttributeByRawId": {
            "post": {
                "description": "## Внимание!\n\n## Метод работает, но больше не поддерживается.\n\n**Переходите на использование соответствующего метода из группы /party/**\n\n---\n\n\nВызывает CDI-метод \"closeAttributeByRawId\". Метод позволяет закрыть атрибут клиента по его rawId.",
                "tags": [
                    "Cards"
                ],
                "summary": "Закрыть атрибут клиента по его rawId",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "Информация по атрибуту",
                        "name": "Counterparty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/close.CloseAttributeByRawIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/fuzzySearch": {
            "post": {
                "description": "## Внимание!\n\n## Метод работает, но больше не поддерживается.\n\n**Переходите на использование соответствующего метода из группы /party/**\n\n---\n\n\nВызывает CDI-метод \"fuzzySearch\". Метод позволяет найти всех контрагентов, являющихся дубликатами для заданной записи.\nВНИМАНИЕ! Успешные ответы обозначенные кодами 2001, 2002 и т.д. возвращаются с HTTP-кодом 200. Здесь так указано для обозначения разной структуры ответа в зависимости от party_type",
                "tags": [
                    "Cards"
                ],
                "summary": "Поиск дубликатов контрагентов",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "Информация по контрагенту",
                        "name": "Counterparty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/search.FuzzyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Могут быть другие виды ответов, смотри коды 2001 и далее",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.PhysicalResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.MatchedParty"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "party": {
                                                            "allOf": [
                                                                {
                                                                    "$ref": "#/definitions/party.Physical"
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.Email"
                                                                            }
                                                                        },
                                                                        "past_attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.Email"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2001": {
                        "description": "HTTP Код 200. party_type = PHYSICAL",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.PhysicalResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.MatchedParty"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "party": {
                                                            "allOf": [
                                                                {
                                                                    "$ref": "#/definitions/party.Physical"
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.Email"
                                                                            }
                                                                        },
                                                                        "past_attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.Email"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2002": {
                        "description": "HTTP Код 200. party_type = VEHICLE",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.VehicleResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.MatchedParty"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "party": {
                                                            "allOf": [
                                                                {
                                                                    "$ref": "#/definitions/party.Vehicle"
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.DocumentAuto"
                                                                            }
                                                                        },
                                                                        "past_attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.DocumentAuto"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2003": {
                        "description": "HTTP Код 200. party_type = PHYSICAL_PROSPECT",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.PhysicalProspectResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.MatchedParty"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "party": {
                                                            "allOf": [
                                                                {
                                                                    "$ref": "#/definitions/party.PhysicalProspect"
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.Email"
                                                                            }
                                                                        },
                                                                        "past_attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.Email"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2004": {
                        "description": "HTTP Код 200. party_type = CONTRACT",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.ContractResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.MatchedParty"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "party": {
                                                            "allOf": [
                                                                {
                                                                    "$ref": "#/definitions/party.Contract"
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.Consent"
                                                                            }
                                                                        },
                                                                        "past_attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2005": {
                        "description": "HTTP Код 200. party_type = VEHICLE_PROSPECT",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.VehicleProspectResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.MatchedParty"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "party": {
                                                            "allOf": [
                                                                {
                                                                    "$ref": "#/definitions/party.VehicleProspect"
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.DocumentAuto"
                                                                            }
                                                                        },
                                                                        "past_attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.DocumentAuto"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2006": {
                        "description": "HTTP Код 200. party_type = EGR",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.EgrResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.MatchedParty"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "party": {
                                                            "allOf": [
                                                                {
                                                                    "$ref": "#/definitions/party.Egr"
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                                            }
                                                                        },
                                                                        "past_attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2007": {
                        "description": "HTTP Код 200. party_type = EGR_PHYSICAL",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.EgrPhysicalResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.MatchedParty"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "party": {
                                                            "allOf": [
                                                                {
                                                                    "$ref": "#/definitions/party.EgrPhysical"
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                                            }
                                                                        },
                                                                        "past_attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2008": {
                        "description": "HTTP Код 200. party_type = LEGAL",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.LegalResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.MatchedParty"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "party": {
                                                            "allOf": [
                                                                {
                                                                    "$ref": "#/definitions/party.Legal"
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                                            }
                                                                        },
                                                                        "past_attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2009": {
                        "description": "HTTP Код 200. party_type = BLACKLIST",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.BlacklistResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.MatchedParty"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "party": {
                                                            "allOf": [
                                                                {
                                                                    "$ref": "#/definitions/party.Blacklist"
                                                                },
                                                                {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                                            }
                                                                        },
                                                                        "past_attributes": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/getByHID": {
            "post": {
                "description": "## Внимание!\n\n## Метод работает, но больше не поддерживается.\n\n**Переходите на использование соответствующего метода из группы /party/**\n\n---\n\n\nВызывает CDI-метод \"getByHID\"\nВНИМАНИЕ! Успешные ответы обозначенные кодами 2001, 2002 и т.д. возвращаются с HTTP-кодом 200. Здесь так указано для обозначения разной структуры ответа в зависимости от party_type",
                "tags": [
                    "Cards"
                ],
                "summary": "Получение контрагента по его идентификатору в Едином клиенте.",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "Набор параметров для получения карточки контрагента",
                        "name": "GetByHid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cards.GetByHidRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "party_type = PHYSICAL. Могут быть другие виды ответов, смотри коды 2001 и далее",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/party.Physical"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.Email"
                                            }
                                        },
                                        "past_attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.Fio"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2001": {
                        "description": "HTTP Код 200. party_type = VEHICLE",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/party.Vehicle"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.DocumentAuto"
                                            }
                                        },
                                        "past_attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.DocumentAuto"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2002": {
                        "description": "HTTP Код 200. party_type = PHYSICAL_PROSPECT",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/party.PhysicalProspect"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.Phone"
                                            }
                                        },
                                        "past_attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.Address"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2003": {
                        "description": "HTTP Код 200. party_type = CONTRACT",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/party.Contract"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.Consent"
                                            }
                                        },
                                        "past_attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2004": {
                        "description": "HTTP Код 200. party_type = VEHICLE_PROSPECT",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/party.VehicleProspect"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.DocumentAuto"
                                            }
                                        },
                                        "past_attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.DocumentAuto"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2005": {
                        "description": "HTTP Код 200. party_type = EGR",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/party.Egr"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                            }
                                        },
                                        "past_attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2006": {
                        "description": "HTTP Код 200. party_type = EGR_PHYSICAL",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/party.EgrPhysical"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                            }
                                        },
                                        "past_attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2007": {
                        "description": "HTTP Код 200. party_type = LEGAL",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/party.Legal"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                            }
                                        },
                                        "past_attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2008": {
                        "description": "HTTP Код 200. party_type = BLACKLIST",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/party.Blacklist"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                            }
                                        },
                                        "past_attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/getByRawID": {
            "post": {
                "description": "## Внимание!\n\n## Метод работает, но больше не поддерживается.\n\n**Переходите на использование соответствующего метода из группы /party/**\n\n---\n\n\nВызывает CDI-метод getByRawID.\nВНИМАНИЕ! Успешные ответы обозначенные кодами 2001, 2002 и т.д. возвращаются с HTTP-кодом 200. Здесь так указано для обозначения разной структуры ответа в зависимости от party_type",
                "tags": [
                    "Cards"
                ],
                "summary": "Получение карточки контрагента по идентификатору исходной клиентской записи.",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "Набор параметров для получения карточки контрагента",
                        "name": "GetByRawId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cards.GetByRawIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "party_type = PHYSICAL. Могут быть другие виды ответов, смотри коды 2001 и далее",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/party.Physical"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.Email"
                                            }
                                        },
                                        "past_attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.Email"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2001": {
                        "description": "HTTP Код 200. party_type = VEHICLE",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/party.Vehicle"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.DocumentAuto"
                                            }
                                        },
                                        "past_attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.DocumentAuto"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2002": {
                        "description": "HTTP Код 200. party_type = PHYSICAL_PROSPECT",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/party.PhysicalProspect"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.Email"
                                            }
                                        },
                                        "past_attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.Email"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "The purpose of a liveness probe is to understand that the application is running. If the liveness probe fails, the service will be restarted.",
                "tags": [
                    "Health checks"
                ],
                "summary": "Liveness. Проверка на то, что микросервис запущен и работает",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/ofr/signup": {
            "post": {
                "description": "В CDI отправляется запрос на создание контрагента с признаком OFRGU, затем из ответа выбираются\nадреса и документы и копируются в контрагент с признаком OFR",
                "tags": [
                    "Ofr"
                ],
                "summary": "Создание контрагента с признаком OFRGU с копированием документов\\адресов в OFR",
                "parameters": [
                    {
                        "description": "Набор параметров для регистрации контрагента",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ofr.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/party/closeAttribute": {
            "post": {
                "description": "Вызывает CDI-метод \"closeAttribute\"\nПри успешном закрытии атрибута система вернет пустой ответ.",
                "tags": [
                    "Party"
                ],
                "summary": "Метод позволяет закрыть (удалить) у клиента атрибут с указанным идентификатором.",
                "parameters": [
                    {
                        "description": "Входные параметры",
                        "name": "GetByHid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/partyws.CloseAttributeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/party/closeAttributeByRawId": {
            "post": {
                "description": "Вызывает CDI-метод \"closeAttributeByRawId\"\nОсобенность: метод поддерживает закрытие атрибутов только в исходных контрагентах (MERGED_STATUS = 0 или 1).\nПри успешном закрытии атрибута система вернет пустой ответ.",
                "tags": [
                    "Party"
                ],
                "summary": "Метод позволяет закрыть атрибут клиента по его rawId.",
                "parameters": [
                    {
                        "description": "Входные параметры",
                        "name": "GetByHid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/partyws.CloseAttributeByRawIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/party/fuzzySearch": {
            "post": {
                "description": "Вызывает CDI-метод \"fuzzySearch\". Метод позволяет найти всех контрагентов, являющихся дубликатами для заданной записи.",
                "tags": [
                    "Party"
                ],
                "summary": "Поиск дубликатов контрагентов",
                "parameters": [
                    {
                        "description": "Информация по контрагенту",
                        "name": "Party",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/partyws.FuzzySearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/partyws.FuzzySearchResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/party/getByHID": {
            "post": {
                "description": "Вызывает CDI-метод \"getByHID\"",
                "tags": [
                    "Party"
                ],
                "summary": "Получение контрагента по его идентификатору в Едином клиенте.",
                "parameters": [
                    {
                        "description": "Набор параметров для получения карточки контрагента",
                        "name": "GetByHid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/partyws.GetByHIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/partyws.GetByHIDResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/party/getByRawID": {
            "post": {
                "description": "Вызывает CDI-метод \"getByRawID.",
                "tags": [
                    "Party"
                ],
                "summary": "Получение карточки контрагента по идентификатору исходной клиентской записи.",
                "parameters": [
                    {
                        "description": "Набор параметров для получения карточки контрагента",
                        "name": "GetByRawId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/partyws.GetByRawIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/partyws.GetByRawIDResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/party/save": {
            "post": {
                "description": "Вызывает CDI-метод \"save\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Party"
                ],
                "summary": "Создание нового контрагента или обновление существующего.",
                "parameters": [
                    {
                        "description": "Тело запроса",
                        "name": "Party",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/partyws.SaveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/partyws.SaveResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/party/search": {
            "post": {
                "description": "Вызывает CDI-метод \"search\". Метод позволяет найти всех контрагентов, удовлетворяющих заданным критериям.\nМетод поддерживает полнотекстовый и расширенный поиск.\nНапример, в query может придти: query = \"Смирнов Игорь 1700 627092\" - это полнотекстовый поиск\nили расширенный: query = ? PhysicalParty.surname=Смирнов and PhysicalParty.name = Игорь and PhysicalParty.patronymic = Львович and Contract.policyNumber=627092 and Contract.policySeries=1700\"",
                "tags": [
                    "Party"
                ],
                "summary": "Поиск контрагентов",
                "parameters": [
                    {
                        "description": "Входные параметры",
                        "name": "Party",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/partyws.SearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/partyws.SearchResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/ready": {
            "get": {
                "description": "The purpose of a readiness probe is to understand if the application is ready to serve traffic. If the readiness probe fails, the container will be removed from service load balancers. In the real life you might want to add here cache warming (if your application uses cache) or something like this.",
                "tags": [
                    "Health checks"
                ],
                "summary": "Readiness. Проверка на то, что микросервис готово принимать запросы",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/save": {
            "post": {
                "description": "## Внимание!\n\n## Метод работает, но больше не поддерживается.\n\n**Переходите на использование соответствующего метода из группы /party/**\n\n---\n\n\nВызывает CDI-метод \"save\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cards"
                ],
                "summary": "Создание нового проспекта.",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "Тело запроса",
                        "name": "Counterparty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cards.CardCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/party.PhysicalProspect"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.Email"
                                            }
                                        },
                                        "past_attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.Email"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            },
            "patch": {
                "description": "## Внимание!\n\n## Метод работает, но больше не поддерживается.\n\n**Переходите на использование соответствующего метода из группы /party/**\n\n---\n\n\nВызывает CDI-метод \"save\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cards"
                ],
                "summary": "Обновление существующего проспекта.",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "Тело запроса",
                        "name": "Counterparty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cards.CardUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/party.PhysicalProspect"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.Email"
                                            }
                                        },
                                        "past_attributes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/attribute.Email"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        },
        "/search": {
            "post": {
                "description": "## Внимание!\n\n## Метод работает, но больше не поддерживается.\n\n**Переходите на использование соответствующего метода из группы /party/**\n\n---\n\n\nВызывает CDI-метод \"search\". Метод позволяет найти всех контрагентов, удовлетворяющих заданным критериям.\nВНИМАНИЕ! Успешные ответы обозначенные кодами 2001, 2002 и т.д. возвращаются с HTTP-кодом 200. Здесь так указано для обозначения разной структуры ответа в зависимости от party_type",
                "tags": [
                    "Cards"
                ],
                "summary": "Поиск контрагентов",
                "deprecated": true,
                "parameters": [
                    {
                        "description": "Информация по контрагенту",
                        "name": "Counterparty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/search.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Могут быть другие виды ответов, смотри коды 2001 и далее",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.PhysicalResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.Physical"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.Email"
                                                            }
                                                        },
                                                        "past_attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.Email"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2001": {
                        "description": "HTTP Код 200. party_type = PHYSICAL",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.PhysicalResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.Physical"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.Email"
                                                            }
                                                        },
                                                        "past_attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.Email"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2002": {
                        "description": "HTTP Код 200. party_type = VEHICLE",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.VehicleResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.Vehicle"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.DocumentAuto"
                                                            }
                                                        },
                                                        "past_attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.DocumentAuto"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2003": {
                        "description": "HTTP Код 200. party_type = PHYSICAL_PROSPECT",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.PhysicalProspectResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.Physical"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.Email"
                                                            }
                                                        },
                                                        "past_attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.Email"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2004": {
                        "description": "HTTP Код 200. party_type = CONTRACT",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.ContractResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.Contract"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.Consent"
                                                            }
                                                        },
                                                        "past_attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2005": {
                        "description": "HTTP Код 200. party_type = VEHICLE_PROSPECT",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.VehicleProspectResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.VehicleProspect"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.DocumentAuto"
                                                            }
                                                        },
                                                        "past_attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.DocumentAuto"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2006": {
                        "description": "HTTP Код 200. party_type = EGR",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.EgrResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.Egr"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                            }
                                                        },
                                                        "past_attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2007": {
                        "description": "HTTP Код 200. party_type = EGR_PHYSICAL",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.EgrPhysicalResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.EgrPhysical"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                            }
                                                        },
                                                        "past_attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2008": {
                        "description": "HTTP Код 200. party_type = LEGAL",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.LegalResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.Legal"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                            }
                                                        },
                                                        "past_attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "2009": {
                        "description": "HTTP Код 200. party_type = BLACKLIST",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/search.BlacklistResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/party.Blacklist"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                            }
                                                        },
                                                        "past_attributes": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/definitions/attribute.DocumentPassport"
                                                            }
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "attribute.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "description": "Наименование города",
                    "type": "string",
                    "example": "Кузнецк"
                },
                "city_area": {
                    "description": "Район города",
                    "type": "string",
                    "example": "Ленинский"
                },
                "city_area_type": {
                    "description": "Тип района города",
                    "type": "string",
                    "example": "р-н"
                },
                "city_type": {
                    "description": "Тип города",
                    "type": "string",
                    "example": "г"
                },
                "construction": {
                    "description": "Сооружение",
                    "type": "string",
                    "example": "1"
                },
                "country": {
                    "description": "Наименование страны",
                    "type": "string",
                    "example": "Россия"
                },
                "district": {
                    "description": "Федеральный округ",
                    "type": "string",
                    "example": "Южный"
                },
                "entrance": {
                    "description": "Номер подъезда",
                    "type": "string",
                    "example": "3"
                },
                "flat": {
                    "description": "Первая квартира",
                    "type": "string",
                    "example": "11"
                },
                "flat2": {
                    "description": "Вторая квартира",
                    "type": "string",
                    "example": "22"
                },
                "floor": {
                    "description": "Этаж",
                    "type": "string",
                    "example": "2"
                },
                "full_address": {
                    "description": "Адрес",
                    "type": "string",
                    "example": "г. Уф, улицы Ах"
                },
                "geo_quality_code": {
                    "description": "Код качества координат. Примеры: EXACT_HOUSE Координаты с точностью до расширения дома; STREET Координаты найдены с точностью до улицы",
                    "type": "string",
                    "example": "EXACT_HOUSE"
                },
                "hostel": {
                    "description": "Общежитие",
                    "type": "string",
                    "example": "2"
                },
                "house_number": {
                    "description": "Номер дома",
                    "type": "string",
                    "example": "55"
                },
                "identifiers": {
                    "description": "Идентификаторы атрибута",
                    "allOf": [
                        {
                            "$ref": "#/definitions/attribute.Identifiers"
                        }
                    ]
                },
                "korpus": {
                    "description": "Корпус",
                    "type": "string",
                    "example": "1"
                },
                "liter": {
                    "description": "Литера адреса",
                    "type": "string",
                    "example": "А"
                },
                "military_number": {
                    "description": "Номер военной части",
                    "type": "string",
                    "example": "331"
                },
                "office": {
                    "description": "Первый офис",
                    "type": "string",
                    "example": "101"
                },
                "office2": {
                    "description": "Второй офис",
                    "type": "string",
                    "example": "102"
                },
                "postal_box": {
                    "description": "Номер абонентского ящика",
                    "type": "string",
                    "example": "413"
                },
                "postal_code": {
                    "description": "Почтовый индекс",
                    "type": "string",
                    "example": "416370"
                },
                "postpone_reason": {
                    "description": "Причина отложения",
                    "type": "string",
                    "example": "CONTRACT_REQUIRED"
                },
                "postponed": {
                    "description": "Отложен",
                    "type": "string",
                    "example": "NORMAL"
                },
                "primary": {
                    "description": "Признак основного адреса",
                    "type": "boolean",
                    "example": true
                },
                "quality_code": {
                    "description": "Код полноты адреса. Примеры: GOOD Пригоден для почтовой рассылки; ON_DEMAND Адрес до востребования",
                    "type": "string",
                    "example": "GOOD"
                },
                "raw_source": {
                    "description": "Исходное значение адреса (одной строкой)",
                    "type": "string",
                    "example": "г. Москва, ул. Давыдовская, д.6, кв. 2"
                },
                "rayon": {
                    "description": "Наименование района в регионе",
                    "type": "string",
                    "example": "Кузнецкий"
                },
                "rayon_type": {
                    "description": "Тип района в регионе",
                    "type": "string",
                    "example": "р-н"
                },
                "region": {
                    "description": "Наименование региона",
                    "type": "string",
                    "example": "Астраханская"
                },
                "region_type": {
                    "description": "Тип региона",
                    "type": "string",
                    "example": "обл"
                },
                "room": {
                    "description": "Первая комната",
                    "type": "string",
                    "example": "1"
                },
                "room2": {
                    "description": "Вторая комната",
                    "type": "string",
                    "example": "2"
                },
                "section": {
                    "description": "Секция",
                    "type": "string",
                    "example": "1"
                },
                "settlement": {
                    "description": "Наименование населенного пункта",
                    "type": "string",
                    "example": "Икряное"
                },
                "settlement_type": {
                    "description": "Тип населенного пункта",
                    "type": "string",
                    "example": "с"
                },
                "street": {
                    "description": "Наименование улицы",
                    "type": "string",
                    "example": "Олега Кошевого"
                },
                "street_type": {
                    "description": "Тип улицы",
                    "type": "string",
                    "example": "пер"
                },
                "stroenie": {
                    "description": "Строение",
                    "type": "string",
                    "example": "1"
                },
                "type": {
                    "description": "Тип адреса. Примеры: OME фактический для PHYSICAL, PHYSICAL_PROSPECT; LOCATION для LEGAL, EGR, PHYSICAL",
                    "type": "string",
                    "example": "HOME"
                },
                "validation_code": {
                    "description": "Код проверки адреса. Примеры: VALIDATED Адрес распознан успешно; CONFIRMED_MANUALLY Подтверждено контролером",
                    "type": "string",
                    "example": "VALIDATED"
                },
                "vladenie": {
                    "description": "Владение",
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "attribute.Consent": {
            "type": "object",
            "properties": {
                "consent_value": {
                    "description": "Значение согласия, COMMON_GRANTED Предоставлено; COMMON_REQUIRED_TO_OBTAIN Требуется получить",
                    "type": "string",
                    "example": "COMMON_GRANTED"
                },
                "identifiers": {
                    "description": "Идентификаторы атрибута",
                    "allOf": [
                        {
                            "$ref": "#/definitions/attribute.Identifiers"
                        }
                    ]
                },
                "quality_code": {
                    "description": "Код качества согласия. Примеры: CONFIRMED_MANUALLY Подтверждено контролером, DEFAULT По умолчанию",
                    "type": "string",
                    "example": "CONFIRMED_MANUALLY"
                },
                "raw_source": {
                    "description": "Исходное значение согласия (одной строкой)",
                    "type": "string"
                },
                "type": {
                    "description": "Тип согласия, PERSONAL_DATA_PROCESSING_OFR Согласие на обработку персональных данных из ОФР",
                    "type": "string",
                    "example": "PERSONAL_DATA_PROCESSING_OFR"
                }
            }
        },
        "attribute.DocumentAuto": {
            "type": "object",
            "properties": {
                "actuality_date": {
                    "description": "Дата актуальности",
                    "type": "string",
                    "example": "05.07.2018"
                },
                "additional_info": {
                    "description": "Дополнительная информация (примечание)",
                    "type": "string",
                    "example": "примечание"
                },
                "document_number": {
                    "description": "номер документа",
                    "type": "string",
                    "example": "123456"
                },
                "document_series": {
                    "description": "Серия документа",
                    "type": "string",
                    "example": "55 44"
                },
                "identifiers": {
                    "description": "Идентификаторы атрибута",
                    "allOf": [
                        {
                            "$ref": "#/definitions/attribute.Identifiers"
                        }
                    ]
                },
                "issue_date": {
                    "description": "Дата выдачи документа",
                    "type": "string",
                    "example": "05.07.2018"
                },
                "license_plate": {
                    "description": "Регистрационный номер транспортного средства",
                    "type": "string",
                    "example": "A123EK78"
                },
                "postpone_reason": {
                    "description": "Причина отложения",
                    "type": "string",
                    "example": "QUERY_TO_OTHER_SYSTEM"
                },
                "primary": {
                    "description": "Признак основного документа",
                    "type": "boolean",
                    "example": true
                },
                "qualifier_type": {
                    "description": "Уточняющий тип документа. Например PASSPORT_RU, DRIVING_LICENSE, OVERSEAS_PASSPORT_RU",
                    "type": "string",
                    "example": "PASSPORT_RU"
                },
                "quality_code": {
                    "description": "Код качества документа. Примеры: EDITED Правильное значение, MISSED Пустой",
                    "type": "string",
                    "example": "EDITED"
                },
                "raw_source": {
                    "description": "Исходное значение документа (одной строкой)",
                    "type": "string",
                    "example": "45 07 654343 03.08.2007 отделение Московское 660-119 23.03.2023"
                },
                "type": {
                    "description": "Тип документа, PASSPORT Документ, удостоверяющий личность; VEHICLE_DOCUMENT Документ транспортного средства",
                    "type": "string",
                    "example": "PASSPORT"
                }
            }
        },
        "attribute.DocumentPassport": {
            "type": "object",
            "properties": {
                "actuality_date": {
                    "description": "Дата актуальности",
                    "type": "string",
                    "example": "05.07.2018"
                },
                "additional_info": {
                    "description": "Дополнительная информация (примечание)",
                    "type": "string",
                    "example": "примечание"
                },
                "department_code": {
                    "description": "Код подразделения органа, выдавшего документ",
                    "type": "string",
                    "example": "300-008"
                },
                "document_change_reason": {
                    "description": "Причина изменения документа",
                    "type": "string",
                    "example": "EXPIRED"
                },
                "document_number": {
                    "description": "номер документа",
                    "type": "string",
                    "example": "123456"
                },
                "document_series": {
                    "description": "Серия документа",
                    "type": "string",
                    "example": "55 44"
                },
                "expiry_date": {
                    "description": "Дата истечения срока действия",
                    "type": "string",
                    "example": "03.08.2027"
                },
                "full_document": {
                    "description": "Серия/номер",
                    "type": "string",
                    "example": "55 44 123456"
                },
                "identifiers": {
                    "description": "Идентификаторы атрибута",
                    "allOf": [
                        {
                            "$ref": "#/definitions/attribute.Identifiers"
                        }
                    ]
                },
                "invalid_status": {
                    "description": "Статус невалидности документа",
                    "type": "string",
                    "example": "OUTDATED"
                },
                "issue_authority": {
                    "description": "Орган, выдавший документ",
                    "type": "string",
                    "example": "ФМС РФ"
                },
                "issue_date": {
                    "description": "Дата выдачи документа",
                    "type": "string",
                    "example": "05.07.2018"
                },
                "postpone_reason": {
                    "description": "Причина отложения",
                    "type": "string",
                    "example": "QUERY_TO_OTHER_SYSTEM"
                },
                "postponed": {
                    "description": "Признак отложености",
                    "type": "string",
                    "example": "NORMAL"
                },
                "primary": {
                    "description": "Признак основного документа",
                    "type": "boolean",
                    "example": true
                },
                "qualifier_type": {
                    "description": "Уточняющий тип документа. Например PASSPORT_RU, DRIVING_LICENSE, OVERSEAS_PASSPORT_RU",
                    "type": "string",
                    "example": "PASSPORT_RU"
                },
                "quality_code": {
                    "description": "Код качества документа. Примеры: EDITED Правильное значение, MISSED Пустой",
                    "type": "string",
                    "example": "EDITED"
                },
                "raw_source": {
                    "description": "Исходное значение документа (одной строкой)",
                    "type": "string",
                    "example": "45 07 654343 03.08.2007 отделение Московское 660-119 23.03.2023"
                },
                "type": {
                    "description": "Тип документа, PASSPORT Документ, удостоверяющий личность; VEHICLE_DOCUMENT Документ транспортного средства",
                    "type": "string",
                    "example": "PASSPORT"
                }
            }
        },
        "attribute.Email": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Значение email",
                    "type": "string",
                    "example": "mamon@gazprom.ru"
                },
                "identifiers": {
                    "description": "Идентификаторы атрибута",
                    "allOf": [
                        {
                            "$ref": "#/definitions/attribute.Identifiers"
                        }
                    ]
                },
                "postpone_reason": {
                    "description": "Причина отложения",
                    "type": "string",
                    "example": "DOCUMENT_REQUIRED"
                },
                "postponed": {
                    "description": "Признак отложенности",
                    "type": "string",
                    "example": "NORMAL"
                },
                "primary": {
                    "description": "Приоритетный",
                    "type": "boolean",
                    "example": true
                },
                "quality_code": {
                    "description": "Код качества email. Примеры: GOOD Хорошее значение, GOOD_CHANGED Хорошее исправленное значение",
                    "type": "string",
                    "example": "GOOD"
                },
                "rank": {
                    "description": "Приоритет атрибута согласно скорингу",
                    "type": "integer",
                    "example": 0
                },
                "raw_source": {
                    "description": "Исходное значение email",
                    "type": "string",
                    "example": "mamon@gazprom.ru"
                },
                "type": {
                    "description": "Тип email",
                    "type": "string",
                    "example": "HOME"
                }
            }
        },
        "attribute.Fio": {
            "type": "object",
            "properties": {
                "identifiers": {
                    "description": "Идентификаторы атрибута",
                    "allOf": [
                        {
                            "$ref": "#/definitions/attribute.Identifiers"
                        }
                    ]
                },
                "name": {
                    "description": "Имя",
                    "type": "string",
                    "example": "Сергей"
                },
                "patronymic": {
                    "description": "Отчество",
                    "type": "string",
                    "example": "Сергеевич"
                },
                "primary": {
                    "description": "Приоритетный",
                    "type": "boolean",
                    "example": true
                },
                "quality_code": {
                    "description": "Код качества",
                    "type": "string",
                    "example": "GOOD"
                },
                "raw_source": {
                    "description": "Исходное значение",
                    "type": "string",
                    "example": "Мамонов Сергей Сергеевич"
                },
                "surname": {
                    "description": "Фамилия",
                    "type": "string",
                    "example": "Мамонов"
                }
            }
        },
        "attribute.Identifiers": {
            "type": "object",
            "properties": {
                "deleted": {
                    "description": "Признак скрытого атрибута. True в случаях: 1 актуальная версия атрибута отмечена как закрытая; 2 атрибут был помечен как «скрытый» в результате слияния атрибутов.",
                    "type": "boolean",
                    "example": false
                },
                "hid": {
                    "description": "Уникальный идентификатор атрибута. Не путать с HID самой сущности, это разные значения",
                    "type": "integer",
                    "example": 24561024
                },
                "raw_id": {
                    "description": "Идентификатор атрибута (RawId) в исходной системе. Не путать с RawId самой сущности, это разные значения",
                    "type": "string",
                    "example": "123e4567-e89b-12d3"
                },
                "type": {
                    "description": "Тип атрибута, например EMAIL, PHONE, ADDRESS, DOCUMENT_PASSPORT, DOCUMENT_AUTO",
                    "type": "string",
                    "example": "EMAIL"
                }
            }
        },
        "attribute.Phone": {
            "type": "object",
            "properties": {
                "city_code": {
                    "description": "Код города",
                    "type": "string",
                    "example": "908"
                },
                "country_code": {
                    "description": "код страны",
                    "type": "string",
                    "example": "7"
                },
                "extension": {
                    "description": "Добавочный номер",
                    "type": "string",
                    "example": "101"
                },
                "full_phone": {
                    "description": "номер",
                    "type": "string",
                    "example": "7-908-134-58-32"
                },
                "identifiers": {
                    "description": "Идентификаторы атрибута",
                    "allOf": [
                        {
                            "$ref": "#/definitions/attribute.Identifiers"
                        }
                    ]
                },
                "number": {
                    "description": "Номер телефона",
                    "type": "string",
                    "example": "1345832"
                },
                "postpone_reason": {
                    "description": "Причина отложения",
                    "type": "string",
                    "example": "CALL_TO_CLIENT_REQUIRED"
                },
                "postponed": {
                    "description": "Признак отложенности",
                    "type": "string",
                    "example": "NORMAL"
                },
                "primary": {
                    "description": "Приоритетный",
                    "type": "boolean",
                    "example": true
                },
                "quality_code": {
                    "description": "Код качества телефона. GOOD Корректный телефон; CONFIRMED_MANUALLY Подтверждено контролером",
                    "type": "string",
                    "example": "GOOD"
                },
                "rank": {
                    "description": "Приоритет атрибута согласно скорингу",
                    "type": "integer",
                    "example": 0
                },
                "raw_source": {
                    "description": "Исходное значение телефона (одной строкой)",
                    "type": "string",
                    "example": "7-908-134-58-32"
                },
                "type": {
                    "description": "Тип телефона",
                    "type": "string",
                    "example": "MOBILE"
                }
            }
        },
        "cards.CardCreateRequest": {
            "type": "object",
            "required": [
                "birthdate",
                "email",
                "name",
                "phone",
                "privacy_policy_agreement",
                "raw_id",
                "source_system",
                "surname"
            ],
            "properties": {
                "address": {
                    "description": "Адрес",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cards.createUpdateAddress"
                    }
                },
                "birthdate": {
                    "description": "День рождения",
                    "type": "string",
                    "example": "03.12.1987"
                },
                "dul": {
                    "description": "Документ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cards.createUpdateDocument"
                    }
                },
                "email": {
                    "$ref": "#/definitions/cards.createUpdateEmail"
                },
                "gender": {
                    "description": "Пол",
                    "type": "string",
                    "example": "MALE"
                },
                "name": {
                    "description": "Имя",
                    "type": "string",
                    "example": "Сергей"
                },
                "party_type": {
                    "description": "Тип контрагента (PartyType). Например PHYSICAL, PHYSICAL_PROSPECT",
                    "type": "string",
                    "default": "PHYSICAL_PROSPECT",
                    "example": "PHYSICAL_PROSPECT"
                },
                "patronymic": {
                    "description": "Отчество",
                    "type": "string",
                    "example": "Викторович"
                },
                "phone": {
                    "$ref": "#/definitions/cards.createUpdatePhone"
                },
                "privacy_policy_agreement": {
                    "description": "Согласие на обработку ПД",
                    "type": "boolean"
                },
                "prospect_type": {
                    "description": "Тип проспекта. Например OFR",
                    "type": "string",
                    "example": "OFR"
                },
                "raw_id": {
                    "description": "Идентификатор (RawId) в исходной системе",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "resident_flg": {
                    "description": "Признак: резидент",
                    "type": "boolean"
                },
                "source_system": {
                    "description": "Код исходной системы",
                    "type": "string",
                    "example": "GWPC"
                },
                "surname": {
                    "description": "Фамилия",
                    "type": "string",
                    "example": "Мамонов"
                }
            }
        },
        "cards.CardUpdateRequest": {
            "type": "object",
            "required": [
                "party_type",
                "raw_id",
                "source_system"
            ],
            "properties": {
                "address": {
                    "description": "Адрес",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cards.createUpdateAddress"
                    }
                },
                "birthdate": {
                    "description": "День рождения",
                    "type": "string",
                    "example": "15.01.1987"
                },
                "dul": {
                    "description": "Документ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cards.createUpdateDocument"
                    }
                },
                "email": {
                    "description": "Электронная почта",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cards.createUpdateEmail"
                    }
                },
                "name": {
                    "description": "Имя",
                    "type": "string",
                    "example": "Сергей"
                },
                "party_type": {
                    "description": "Тип контрагента (PartyType). Например PHYSICAL, PHYSICAL_PROSPECT",
                    "type": "string",
                    "example": "PHYSICAL_PROSPECT"
                },
                "patronymic": {
                    "description": "Отчество",
                    "type": "string",
                    "example": "Викторович"
                },
                "phone": {
                    "description": "Телефон",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cards.createUpdatePhone"
                    }
                },
                "prospect_type": {
                    "description": "Тип проспекта. Например OFR",
                    "type": "string",
                    "example": "OFR"
                },
                "raw_id": {
                    "description": "Идентификатор (RawId) в исходной системе",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "source_system": {
                    "description": "Код исходной системы",
                    "type": "string",
                    "example": "GWPC"
                },
                "surname": {
                    "description": "Фамилия",
                    "type": "string",
                    "example": "Мамонов"
                }
            }
        },
        "cards.GetByHidRequest": {
            "type": "object",
            "required": [
                "hid"
            ],
            "properties": {
                "hid": {
                    "description": "Уникальный идентификатор контрагента в Едином клиенте (HID)",
                    "type": "string",
                    "example": "1024"
                },
                "party_type": {
                    "description": "Тип контрагента (PartyType). Например PHYSICAL, PHYSICAL_PROSPECT",
                    "type": "string",
                    "example": "PHYSICAL_PROSPECT"
                }
            }
        },
        "cards.GetByRawIdRequest": {
            "type": "object",
            "required": [
                "party_type",
                "raw_id",
                "source_system"
            ],
            "properties": {
                "party_type": {
                    "description": "Тип контрагента (PartyType). Например PHYSICAL, PHYSICAL_PROSPECT",
                    "type": "string",
                    "example": "PHYSICAL_PROSPECT"
                },
                "raw_id": {
                    "description": "Идентификатор (RawId) в исходной системе",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "source_system": {
                    "description": "Код исходной системы",
                    "type": "string",
                    "example": "GWPC"
                }
            }
        },
        "cards.createUpdateAddress": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "city": {
                    "description": "Наименование города",
                    "type": "string",
                    "example": "Кузнецк"
                },
                "city_area": {
                    "description": "Район города",
                    "type": "string",
                    "example": "Ленинский"
                },
                "city_area_type": {
                    "description": "Тип района города",
                    "type": "string",
                    "example": "р-н"
                },
                "city_type": {
                    "description": "Тип города",
                    "type": "string",
                    "example": "г"
                },
                "construction": {
                    "description": "Сооружение",
                    "type": "string",
                    "example": "1"
                },
                "country": {
                    "description": "Наименование страны",
                    "type": "string",
                    "example": "Россия"
                },
                "district": {
                    "description": "Федеральный округ",
                    "type": "string",
                    "example": "Южный"
                },
                "entrance": {
                    "description": "Номер подъезда",
                    "type": "string",
                    "example": "3"
                },
                "flat": {
                    "description": "Первая квартира",
                    "type": "string",
                    "example": "11"
                },
                "flat2": {
                    "description": "Вторая квартира",
                    "type": "string",
                    "example": "22"
                },
                "floor": {
                    "description": "Этаж",
                    "type": "string",
                    "example": "2"
                },
                "full_address": {
                    "description": "Адрес",
                    "type": "string",
                    "example": "г. Уф, улицы Ах"
                },
                "hostel": {
                    "description": "Общежитие",
                    "type": "string",
                    "example": "2"
                },
                "house_number": {
                    "description": "Номер дома",
                    "type": "string",
                    "example": "55"
                },
                "korpus": {
                    "description": "Корпус",
                    "type": "string",
                    "example": "1"
                },
                "liter": {
                    "description": "Литера адреса",
                    "type": "string",
                    "example": "А"
                },
                "military_number": {
                    "description": "Номер военной части",
                    "type": "string",
                    "example": "331"
                },
                "office": {
                    "description": "Первый офис",
                    "type": "string",
                    "example": "101"
                },
                "office2": {
                    "description": "Второй офис",
                    "type": "string",
                    "example": "102"
                },
                "postal_box": {
                    "description": "Номер абонентского ящика",
                    "type": "string",
                    "example": "413"
                },
                "postal_code": {
                    "description": "Почтовый индекс",
                    "type": "string",
                    "example": "416370"
                },
                "postpone_reason": {
                    "description": "Причина отложения",
                    "type": "string",
                    "example": "CONTRACT_REQUIRED"
                },
                "postponed": {
                    "description": "Отложен",
                    "type": "string",
                    "example": "NORMAL"
                },
                "primary": {
                    "description": "Признак основного адреса",
                    "type": "boolean",
                    "example": true
                },
                "raw_id": {
                    "description": "Идентификатор email в исходной системы",
                    "type": "string",
                    "example": "AL.1.PH.1"
                },
                "raw_source": {
                    "description": "Исходное значение адреса",
                    "type": "string",
                    "example": "г Казань, ул Николая Ершова, д 66В"
                },
                "rayon": {
                    "description": "Наименование района в регионе",
                    "type": "string",
                    "example": "Кузнецкий"
                },
                "rayon_type": {
                    "description": "Тип района в регионе",
                    "type": "string",
                    "example": "р-н"
                },
                "region": {
                    "description": "Наименование региона",
                    "type": "string",
                    "example": "Астраханская"
                },
                "region_type": {
                    "description": "Тип региона",
                    "type": "string",
                    "example": "обл"
                },
                "room": {
                    "description": "Первая комната",
                    "type": "string",
                    "example": "1"
                },
                "room2": {
                    "description": "Вторая комната",
                    "type": "string",
                    "example": "2"
                },
                "section": {
                    "description": "Секция",
                    "type": "string",
                    "example": "1"
                },
                "settlement": {
                    "description": "Наименование населенного пункта",
                    "type": "string",
                    "example": "Икряное"
                },
                "settlement_type": {
                    "description": "Тип населенного пункта",
                    "type": "string",
                    "example": "с"
                },
                "street": {
                    "description": "Наименование улицы",
                    "type": "string",
                    "example": "Олега Кошевого"
                },
                "street_type": {
                    "description": "Тип улицы",
                    "type": "string",
                    "example": "пер"
                },
                "stroenie": {
                    "description": "Строение",
                    "type": "string",
                    "example": "1"
                },
                "type": {
                    "description": "Тип адреса",
                    "type": "string",
                    "example": "HOME"
                },
                "vladenie": {
                    "description": "Владение",
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "cards.createUpdateDocument": {
            "type": "object",
            "required": [
                "attribute_type"
            ],
            "properties": {
                "actuality_date": {
                    "description": "Дата актуальности",
                    "type": "string",
                    "example": "05.07.2018"
                },
                "additional_info": {
                    "description": "Дополнительная информация (примечание)",
                    "type": "string",
                    "example": "примечание"
                },
                "attribute_type": {
                    "description": "Тип атрибута документа. Например DOCUMENT_PASSPORT, DOCUMENT_AUTO",
                    "type": "string",
                    "enum": [
                        "DOCUMENT_PASSPORT",
                        "DOCUMENT_AUTO"
                    ],
                    "example": "DOCUMENT_PASSPORT"
                },
                "department_code": {
                    "description": "Код подразделения органа, выдавшего документ",
                    "type": "string",
                    "example": "300-008"
                },
                "document_change_reason": {
                    "description": "Причина изменения документа",
                    "type": "string",
                    "example": "EXPIRED"
                },
                "document_number": {
                    "description": "Номер документа",
                    "type": "string",
                    "example": "123456"
                },
                "document_series": {
                    "description": "Серия документа",
                    "type": "string",
                    "example": "55 44"
                },
                "expiry_date": {
                    "description": "Дата истечения срока действия",
                    "type": "string",
                    "example": "03.08.2027"
                },
                "full_document": {
                    "description": "Серия/номер",
                    "type": "string",
                    "example": "55 44 123456"
                },
                "issue_authority": {
                    "description": "Орган, выдавший документ",
                    "type": "string",
                    "example": "ФМС РФ"
                },
                "issue_date": {
                    "description": "Дата выдачи документа",
                    "type": "string",
                    "example": "05.07.2018"
                },
                "license_plate": {
                    "description": "Регистрационный номер транспортного средства",
                    "type": "string",
                    "example": "A123EK78"
                },
                "postpone_reason": {
                    "description": "Причина отложения",
                    "type": "string",
                    "example": "DOCUMENT_REQUIRED"
                },
                "postponed": {
                    "description": "Отложен",
                    "type": "string",
                    "example": "NORMAL"
                },
                "primary": {
                    "description": "Признак основного документа",
                    "type": "boolean",
                    "example": true
                },
                "qualifier_type": {
                    "description": "Уточняющий тип документа. Например PASSPORT_RU, DRIVING_LICENSE, OVERSEAS_PASSPORT_RU",
                    "type": "string",
                    "example": "PASSPORT_RU"
                },
                "raw_id": {
                    "description": "Идентификатор (RawId) в исходной системе",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "raw_source": {
                    "description": "Исходное значение документа (одной строкой)",
                    "type": "string",
                    "example": "ОУФМС России по Москве"
                },
                "type": {
                    "description": "Тип документа",
                    "type": "string",
                    "example": "PASSPORT"
                }
            }
        },
        "cards.createUpdateEmail": {
            "type": "object",
            "required": [
                "raw_id"
            ],
            "properties": {
                "email": {
                    "description": "Значение email",
                    "type": "string",
                    "example": "mamon@gazprom.ru"
                },
                "raw_id": {
                    "description": "Идентификатор email в исходной системы",
                    "type": "string",
                    "example": "AL.1.PH.1"
                },
                "raw_source": {
                    "description": "Исходное значение email",
                    "type": "string",
                    "example": "mamon@gazprom.ru"
                },
                "type": {
                    "description": "Тип email",
                    "type": "string",
                    "example": "HOME"
                }
            }
        },
        "cards.createUpdatePhone": {
            "type": "object",
            "required": [
                "raw_id"
            ],
            "properties": {
                "city_code": {
                    "description": "Код города",
                    "type": "string",
                    "example": "908"
                },
                "country_code": {
                    "description": "Код страны",
                    "type": "string",
                    "example": "7"
                },
                "extension": {
                    "description": "Добавочный номер",
                    "type": "string",
                    "example": "101"
                },
                "full_phone": {
                    "description": "Номер",
                    "type": "string",
                    "example": "7-908-134-58-32"
                },
                "number": {
                    "description": "Номер телефона",
                    "type": "string",
                    "example": "1345832"
                },
                "raw_id": {
                    "description": "Идентификатор телефона в исходной системы",
                    "type": "string",
                    "example": "AL.1.PH.1"
                },
                "raw_source": {
                    "description": "Исходное значение телефона (одной строкой)",
                    "type": "string",
                    "example": "7-908-134-58-32"
                },
                "type": {
                    "description": "Тип телефона",
                    "type": "string",
                    "example": "MOBILE"
                }
            }
        },
        "close.CloseAttributeByRawIdRequest": {
            "type": "object",
            "required": [
                "attribute_raw_id",
                "attribute_type",
                "party_type"
            ],
            "properties": {
                "attribute_raw_id": {
                    "description": "Идентификатор атрибута (RawId) в исходной системе. Не путать с RawId самой сущности, это разные значения",
                    "type": "string",
                    "example": "123e4567-e89b-12d3"
                },
                "attribute_type": {
                    "description": "Тип атрибута, например EMAIL, PHONE, ADDRESS, DOCUMENT_PASSPORT, DOCUMENT_AUTO",
                    "type": "string",
                    "example": "PHONE"
                },
                "hid": {
                    "description": "Уникальный идентификатор контрагента в Едином клиенте (HID)",
                    "type": "integer",
                    "example": 24561024
                },
                "party_type": {
                    "description": "Тип контрагента (PartyType). Например PHYSICAL, PHYSICAL_PROSPECT",
                    "type": "string",
                    "example": "PHYSICAL"
                },
                "raw_id": {
                    "description": "Идентификатор (RawId) в исходной системе",
                    "type": "string",
                    "example": "123e4567-e89b-12d3"
                },
                "source_system": {
                    "description": "Код исходной системы. Исходные контрагенты (контрагенты, которые не были ни с кем объединены) содержат исходный идентификатор — пару source_system + raw_id",
                    "type": "string",
                    "example": "GWPC"
                }
            }
        },
        "close.CloseAttributeRequest": {
            "type": "object",
            "required": [
                "attribute_hid",
                "attribute_type",
                "party_type"
            ],
            "properties": {
                "attribute_hid": {
                    "description": "Уникальный идентификатор атрибута. Не путать с HID самой сущности, это разные значения",
                    "type": "integer",
                    "example": 24561024
                },
                "attribute_type": {
                    "description": "Тип атрибута, например EMAIL, PHONE, ADDRESS, DOCUMENT_PASSPORT, DOCUMENT_AUTO",
                    "type": "string",
                    "example": "PHONE"
                },
                "party_type": {
                    "description": "Тип контрагента (PartyType). Например PHYSICAL, PHYSICAL_PROSPECT",
                    "type": "string",
                    "example": "PHYSICAL"
                }
            }
        },
        "domain.Addr": {
            "type": "object",
            "properties": {
                "additionArea": {
                    "type": "string"
                },
                "additionAreaStreet": {
                    "type": "string"
                },
                "addressStr": {
                    "type": "string"
                },
                "area": {
                    "type": "string"
                },
                "building": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "countryId": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "eTag": {
                    "type": "string"
                },
                "fiasCode": {
                    "type": "string"
                },
                "flat": {
                    "type": "string"
                },
                "frame": {
                    "type": "string"
                },
                "house": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "region": {
                    "type": "string"
                },
                "settlement": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "domain.Ctt": {
            "type": "object",
            "properties": {
                "eTag": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "domain.Doc": {
            "type": "object",
            "properties": {
                "eTag": {
                    "type": "string"
                },
                "expiryDate": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "issueBy": {
                    "type": "string"
                },
                "issueDate": {
                    "type": "string"
                },
                "issueId": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "series": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vrfStu": {
                    "type": "string"
                }
            }
        },
        "domain.OfrParty": {
            "type": "object",
            "properties": {
                "attribute": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.WAttribute"
                    }
                },
                "field": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.WField"
                    }
                },
                "rawId": {
                    "type": "string"
                }
            }
        },
        "domain.Prn": {
            "type": "object",
            "properties": {
                "addrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Addr"
                    }
                },
                "birthDate": {
                    "type": "string"
                },
                "birthPlace": {
                    "type": "string"
                },
                "citizenship": {
                    "type": "string"
                },
                "ctts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Ctt"
                    }
                },
                "docs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Doc"
                    }
                },
                "eTag": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "inn": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "middleName": {
                    "type": "string"
                },
                "rawId": {
                    "type": "string"
                },
                "snils": {
                    "type": "string"
                }
            }
        },
        "http.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code is error code provided by error producer",
                    "type": "string"
                },
                "details": {
                    "description": "Details is additional info provided by error producer",
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {
                    "description": "Message is error description",
                    "type": "string"
                },
                "translationKey": {
                    "description": "TranslationKey is error code translation key",
                    "type": "string"
                },
                "type": {
                    "description": "Type is error type (panic, system, business)",
                    "type": "string"
                }
            }
        },
        "ofr.Request": {
            "type": "object",
            "properties": {
                "party": {
                    "description": "Контрагент в CDI",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.OfrParty"
                        }
                    ]
                },
                "prn": {
                    "description": "Пользователь (Person) зарегистрированный в ЕСИА",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.Prn"
                        }
                    ]
                }
            }
        },
        "party.Blacklist": {
            "type": "object",
            "properties": {
                "attributes": {
                    "description": "Атрибуты контрагента PHYSICAL",
                    "type": "array",
                    "items": {}
                },
                "birthdate": {
                    "description": "Дата рождения",
                    "type": "string",
                    "example": "22.01.1987"
                },
                "identifiers": {
                    "description": "Идентификаторы контрагента",
                    "allOf": [
                        {
                            "$ref": "#/definitions/party.Identifiers"
                        }
                    ]
                },
                "inn": {
                    "description": "ИНН",
                    "type": "string",
                    "example": "526317984689"
                },
                "license_plate": {
                    "description": "Номер автомобиля",
                    "type": "string",
                    "example": "A123EK78"
                },
                "name": {
                    "description": "Имя",
                    "type": "string",
                    "example": "Сергей"
                },
                "past_attributes": {
                    "description": "Прошлые значения атрибутов контрагента PHYSICAL (если есть)",
                    "type": "array",
                    "items": {}
                },
                "patronymic": {
                    "description": "Отчество",
                    "type": "string",
                    "example": "Сергеевич"
                },
                "reason": {
                    "description": "Причина добавления в список",
                    "type": "string",
                    "example": "Спам"
                },
                "sources": {
                    "description": "Исходные контрагенты: если текущая карточка является золотой (объединенный контрагент, образовавшийся в результате слияния двух или более исходных контрагентов)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/source.Source"
                    }
                },
                "surname": {
                    "description": "Фамилия",
                    "type": "string",
                    "example": "Мамонов"
                },
                "vin": {
                    "description": "VIN-номер",
                    "type": "string",
                    "example": "XTA21053W17376550"
                }
            }
        },
        "party.Contract": {
            "type": "object",
            "properties": {
                "attributes": {
                    "description": "Атрибуты контрагента PHYSICAL",
                    "type": "array",
                    "items": {}
                },
                "code_lnr": {
                    "description": "Личный номер работника",
                    "type": "string",
                    "example": "4585201"
                },
                "code_skk": {
                    "description": "Код СКК подразделения",
                    "type": "string",
                    "example": "85201"
                },
                "contract_end_date": {
                    "description": "Дата окончания договора",
                    "type": "string",
                    "example": "18.07.2024"
                },
                "contract_number": {
                    "description": "Номер договора",
                    "type": "string",
                    "example": "627092"
                },
                "contract_series": {
                    "description": "Серия договора",
                    "type": "string",
                    "example": "1077"
                },
                "contract_start_date": {
                    "description": "Дата начала договора",
                    "type": "string",
                    "example": "18.07.2022"
                },
                "identifiers": {
                    "description": "Идентификаторы контрагента",
                    "allOf": [
                        {
                            "$ref": "#/definitions/party.Identifiers"
                        }
                    ]
                },
                "past_attributes": {
                    "description": "Прошлые значения атрибутов контрагента PHYSICAL (если есть)",
                    "type": "array",
                    "items": {}
                },
                "policy_number": {
                    "description": "Номер полиса",
                    "type": "string",
                    "example": "627092"
                },
                "policy_series": {
                    "description": "Серия полиса",
                    "type": "string",
                    "example": "1077"
                },
                "sources": {
                    "description": "Исходные контрагенты: если текущая карточка является золотой (объединенный контрагент, образовавшийся в результате слияния двух или более исходных контрагентов)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/source.Source"
                    }
                },
                "type": {
                    "description": "Тип договора: признак различающий договоры и полисы",
                    "type": "string",
                    "example": "CONTRACT"
                }
            }
        },
        "party.Egr": {
            "type": "object",
            "properties": {
                "activity_status": {
                    "description": "Статус организации. Примеры: ACTIVE Действующее, LIQUIDATED Ликвидировано",
                    "type": "string",
                    "example": "ACTIVE"
                },
                "actuality_date": {
                    "description": "Дата актуальности сведений",
                    "type": "string",
                    "example": "21.01.2001"
                },
                "attributes": {
                    "description": "Атрибуты контрагента PHYSICAL",
                    "type": "array",
                    "items": {}
                },
                "branch_type": {
                    "description": "Тип организации. Примеры: MAIN Головное предприятие, BRANCH Филиал",
                    "type": "string",
                    "example": "MAIN"
                },
                "egr_hid": {
                    "description": "Исторический идентификатор записи в исходной ЕГР БД",
                    "type": "string",
                    "example": "24561024"
                },
                "egr_type": {
                    "description": "Тип организации: юрлицо или ИП. Примеры: LG Юрлицо, IN ИП",
                    "type": "string",
                    "example": "IN"
                },
                "identifiers": {
                    "description": "Идентификаторы контрагента",
                    "allOf": [
                        {
                            "$ref": "#/definitions/party.Identifiers"
                        }
                    ]
                },
                "inn": {
                    "description": "ИНН",
                    "type": "string",
                    "example": "526317984689"
                },
                "ip_name": {
                    "description": "Имя ИП",
                    "type": "string",
                    "example": "Иван"
                },
                "ip_patronymic": {
                    "description": "Отчество ИП",
                    "type": "string",
                    "example": "Иванович"
                },
                "ip_surname": {
                    "description": "Фамилия ИП",
                    "type": "string",
                    "example": "Иванов"
                },
                "kpp": {
                    "description": "КПП",
                    "type": "string",
                    "example": "771401001"
                },
                "last_activity_date": {
                    "description": "Дата последнего обращения в ФНС",
                    "type": "string",
                    "example": "21.01.2001"
                },
                "latin_name": {
                    "description": "Наименование на латинице",
                    "type": "string",
                    "example": "Ivanov"
                },
                "liquidation_date": {
                    "description": "Дата ликвидации",
                    "type": "string",
                    "example": "21.01.2001"
                },
                "name": {
                    "description": "Полное наименование с ОПФ",
                    "type": "string",
                    "example": "ООО Рога и Копыта"
                },
                "ogrn": {
                    "description": "ОГРН",
                    "type": "string",
                    "example": "1117746358608"
                },
                "okato": {
                    "description": "Код ОКАТО",
                    "type": "string",
                    "example": "56401000000"
                },
                "okfs": {
                    "description": "Код ОКФС",
                    "type": "string"
                },
                "okogu": {
                    "description": "Код ОКОГУ",
                    "type": "string",
                    "example": "4100104"
                },
                "okpo": {
                    "description": "Код ОКПО",
                    "type": "string",
                    "example": "50235599"
                },
                "oktmo": {
                    "description": "Код ОКТМО",
                    "type": "string",
                    "example": "45 000 000"
                },
                "okved": {
                    "description": "Код ОКВЭД",
                    "type": "string",
                    "example": "47.91.2"
                },
                "past_attributes": {
                    "description": "Прошлые значения атрибутов контрагента PHYSICAL (если есть)",
                    "type": "array",
                    "items": {}
                },
                "registration_date": {
                    "description": "Дата регистрации",
                    "type": "string",
                    "example": "21.01.2001"
                },
                "short_name": {
                    "description": "Короткое наименование с ОПФ",
                    "type": "string",
                    "example": "Рога и Копыта"
                },
                "sources": {
                    "description": "Исходные контрагенты: если текущая карточка является золотой (объединенный контрагент, образовавшийся в результате слияния двух или более исходных контрагентов)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/source.Source"
                    }
                }
            }
        },
        "party.EgrPhysical": {
            "type": "object",
            "properties": {
                "actuality_date": {
                    "description": "Дата актуальности сведений",
                    "type": "string",
                    "example": ""
                },
                "attributes": {
                    "description": "Атрибуты контрагента PHYSICAL",
                    "type": "array",
                    "items": {}
                },
                "egr_hid": {
                    "description": "Исторический идентификатор записи в исходной ЕГР БД",
                    "type": "string",
                    "example": "24561024"
                },
                "egr_type": {
                    "description": "Тип организации: физлицо",
                    "type": "string",
                    "example": "PH"
                },
                "full_name_raw_source": {
                    "description": "Полное ФИО",
                    "type": "string",
                    "example": "Мамонов Сергей Сергеевич"
                },
                "gender": {
                    "description": "Пол",
                    "type": "string",
                    "example": "MALE"
                },
                "identifiers": {
                    "description": "Идентификаторы контрагента",
                    "allOf": [
                        {
                            "$ref": "#/definitions/party.Identifiers"
                        }
                    ]
                },
                "inn": {
                    "description": "ИНН",
                    "type": "string",
                    "example": "526317984689"
                },
                "name": {
                    "description": "Имя",
                    "type": "string",
                    "example": "Сергей"
                },
                "past_attributes": {
                    "description": "Прошлые значения атрибутов контрагента PHYSICAL (если есть)",
                    "type": "array",
                    "items": {}
                },
                "patronymic": {
                    "description": "Отчество",
                    "type": "string",
                    "example": "Сергеевич"
                },
                "sources": {
                    "description": "Исходные контрагенты: если текущая карточка является золотой (объединенный контрагент, образовавшийся в результате слияния двух или более исходных контрагентов)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/source.Source"
                    }
                },
                "surname": {
                    "description": "Фамилия",
                    "type": "string",
                    "example": "Мамонов"
                }
            }
        },
        "party.Identifiers": {
            "type": "object",
            "properties": {
                "hid": {
                    "description": "Уникальный идентификатор контрагента в Едином клиенте (HID)",
                    "type": "integer",
                    "example": 24561024
                },
                "raw_id": {
                    "description": "Идентификатор (RawId) в исходной системе",
                    "type": "string",
                    "example": "123e4567-e89b-12d3"
                },
                "source_system": {
                    "description": "Код исходной системы. Исходные контрагенты (контрагенты, которые не были ни с кем объединены) содержат исходный идентификатор — пару source_system + raw_id",
                    "type": "string",
                    "example": "GWPC"
                },
                "type": {
                    "description": "Тип контрагента (PartyType), например PHYSICAL, VEHICLE, PHYSICAL_PROSPECT",
                    "type": "string",
                    "example": "PHYSICAL"
                }
            }
        },
        "party.Legal": {
            "type": "object",
            "properties": {
                "actuality_date": {
                    "description": "Дата актуальности",
                    "type": "string",
                    "example": "21.01.2001"
                },
                "attributes": {
                    "description": "Атрибуты контрагента PHYSICAL",
                    "type": "array",
                    "items": {}
                },
                "branch_type": {
                    "description": "Тип организации (код). Примеры: MAIN Головное предприятие, BRANCH Филиал",
                    "type": "string",
                    "example": "MAIN"
                },
                "egr_type": {
                    "description": "Тип организации (код). Примеры: LG Юрлицо, IN ИП",
                    "type": "string",
                    "example": "IN"
                },
                "identifiers": {
                    "description": "Идентификаторы контрагента",
                    "allOf": [
                        {
                            "$ref": "#/definitions/party.Identifiers"
                        }
                    ]
                },
                "inn": {
                    "description": "ИНН",
                    "type": "string",
                    "example": "526317984689"
                },
                "inn_qc": {
                    "description": "Код качества ИНН (литера). Примеры: GOOD Правильное значение, MISSED Неизвестный код",
                    "type": "string",
                    "example": "GOOD"
                },
                "inn_raw_source": {
                    "description": "Исходный ИНН",
                    "type": "string",
                    "example": "526317984689"
                },
                "ip_name": {
                    "description": "Имя для ИП",
                    "type": "string",
                    "example": "Сергей"
                },
                "ip_patronymic": {
                    "description": "Отчество для ИП",
                    "type": "string",
                    "example": "Сергеевич"
                },
                "ip_surname": {
                    "description": "Фамилия для ИП",
                    "type": "string",
                    "example": "Мамонов"
                },
                "kio": {
                    "description": "КИО",
                    "type": "string",
                    "example": "12345"
                },
                "kio_qc": {
                    "description": "Код качества КИО (литера). Примеры: GOOD Правильное значение, MISSED Неизвестный код",
                    "type": "string",
                    "example": "GOOD"
                },
                "kio_raw_source": {
                    "description": "Исходный КИО",
                    "type": "string",
                    "example": "12345"
                },
                "kpp": {
                    "description": "КПП",
                    "type": "string",
                    "example": "771401001"
                },
                "kpp_big": {
                    "description": "КПП крупнейшего налогоплательщика",
                    "type": "string",
                    "example": "771401001"
                },
                "kpp_big_qc": {
                    "description": "Код качества КПП крупнейшего налогоплательщика (литера)). Примеры: GOOD Правильное значение, MISSED Неизвестный код",
                    "type": "string",
                    "example": "GOOD"
                },
                "kpp_big_raw_source": {
                    "description": "Исходный КПП крупнейшего налогоплательщика",
                    "type": "string",
                    "example": "771401001"
                },
                "kpp_qc": {
                    "description": "Код качества КПП (литера). Примеры: GOOD Правильное значение, MISSED Неизвестный код",
                    "type": "string",
                    "example": "GOOD"
                },
                "kpp_raw_source": {
                    "description": "Исходный КПП",
                    "type": "string",
                    "example": "771401001"
                },
                "legal_type": {
                    "description": "Тип ЮЛ. Примеры: COMMON Контрагент, LPU ЛПУ",
                    "type": "string",
                    "example": "COMMON"
                },
                "liquidation_date": {
                    "description": "Дата ликвидации",
                    "type": "string",
                    "example": "21.01.2001"
                },
                "name": {
                    "description": "Наименование",
                    "type": "string",
                    "example": "ООО Мамонов"
                },
                "name_qc": {
                    "description": "Код качества наименования (литера). Примеры: EDITED Правильное значение, MISSED Неизвестный код",
                    "type": "string",
                    "example": "EDITED"
                },
                "name_raw_source": {
                    "description": "Исходное наименование",
                    "type": "string",
                    "example": "ООО Мамонов"
                },
                "ogrn": {
                    "description": "ОГРН",
                    "type": "string",
                    "example": "1117746358608"
                },
                "ogrn_qc": {
                    "description": "Код качества ОГРН (литера). Примеры: GOOD Правильное значение, MISSED Неизвестный код",
                    "type": "string",
                    "example": "GOOD"
                },
                "ogrn_raw_source": {
                    "description": "Исходный ОГРН",
                    "type": "string",
                    "example": "1117746358608"
                },
                "okato": {
                    "description": "ОКАТО",
                    "type": "string",
                    "example": "56401000000"
                },
                "okopf": {
                    "description": "ОКОПФ",
                    "type": "string",
                    "example": "50102"
                },
                "okpo": {
                    "description": "ОКПО",
                    "type": "string",
                    "example": "50235599"
                },
                "okpo_qc": {
                    "description": "Код качества ОКПО (литера). Примеры: GOOD Правильное значение, MISSED Неизвестный код",
                    "type": "string",
                    "example": "GOOD"
                },
                "okpo_raw_source": {
                    "description": "Исходный ОКПО",
                    "type": "string",
                    "example": "50235599"
                },
                "okved": {
                    "description": "ОКВЭД",
                    "type": "string",
                    "example": "47.91.2"
                },
                "okved_qc": {
                    "description": "Код качества ОКВЭД (литера). Примеры: GOOD Правильное значение, MISSED Неизвестный код",
                    "type": "string",
                    "example": "GOOD"
                },
                "okved_raw_source": {
                    "description": "Исходный ОКВЭД",
                    "type": "string",
                    "example": "47.91.2"
                },
                "opf": {
                    "description": "ОПФ",
                    "type": "string",
                    "example": "ООО"
                },
                "opf_full": {
                    "description": "Полная ОПФ",
                    "type": "string",
                    "example": "Общество с ограниченной ответственностью"
                },
                "opf_raw_source": {
                    "description": "Исходная ОПФ",
                    "type": "string",
                    "example": "ООО"
                },
                "past_attributes": {
                    "description": "Прошлые значения атрибутов контрагента PHYSICAL (если есть)",
                    "type": "array",
                    "items": {}
                },
                "registration_date": {
                    "description": "Дата регистрации",
                    "type": "string",
                    "example": "21.01.2001"
                },
                "resident_flg": {
                    "description": "Признак: налоговый резидент",
                    "type": "string",
                    "example": "TRUE"
                },
                "short_name": {
                    "description": "Краткое наименование",
                    "type": "string",
                    "example": "Мамонов"
                },
                "sources": {
                    "description": "Исходные контрагенты: если текущая карточка является золотой (объединенный контрагент, образовавшийся в результате слияния двух или более исходных контрагентов)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/source.Source"
                    }
                }
            }
        },
        "party.MatchedParty": {
            "type": "object",
            "properties": {
                "match_scope": {
                    "description": "Коэффициент соответствия найденной карточки",
                    "type": "integer",
                    "example": 100
                },
                "party": {}
            }
        },
        "party.Physical": {
            "type": "object",
            "properties": {
                "attributes": {
                    "description": "Атрибуты контрагента PHYSICAL",
                    "type": "array",
                    "items": {}
                },
                "birthdate": {
                    "description": "Дата рождения",
                    "type": "string",
                    "example": "22.01.1987"
                },
                "birthdate_qc": {
                    "description": "Код качества даты рождения. Примеры: CONFIRMED_MANUALLY Подтверждено контролером; EDITED Правильное значение",
                    "type": "string",
                    "example": "EDITED"
                },
                "citizenship": {
                    "description": "Гражданство",
                    "type": "string",
                    "example": "Россия"
                },
                "firstname_qc": {
                    "description": "Код качества имени. Примеры: MISPRINT Исправлена опечатка, NOT_SURE Сомнительное значение",
                    "type": "string",
                    "example": "MISPRINT"
                },
                "fullName_raw_source": {
                    "description": "Исходное имя",
                    "type": "string",
                    "example": "Сергей Сергеевич Мамонов"
                },
                "fullname_qc": {
                    "description": "Код качества ФИО. Примеры: CONFIRMED_MANUALLY Подтверждено контролером; EDITED Правильное значение",
                    "type": "string",
                    "example": "EDITED"
                },
                "gender": {
                    "description": "Пол",
                    "type": "string",
                    "example": "MALE"
                },
                "gender_qc": {
                    "description": "Код качества пола. Примеры: OK_CHANGED Корректный, не совпадает с исходным, OK_NOT_CHANGED Корректный",
                    "type": "string",
                    "example": "OK_NOT_CHANGED"
                },
                "identifiers": {
                    "description": "Идентификаторы контрагента",
                    "allOf": [
                        {
                            "$ref": "#/definitions/party.Identifiers"
                        }
                    ]
                },
                "inn": {
                    "description": "ИНН",
                    "type": "string",
                    "example": "526317984689"
                },
                "inn_qc": {
                    "description": "Код качества ИНН. Примеры: GOOD Правильное значение, CONFIRMED_MANUALLY Подтверждено контролером",
                    "type": "string",
                    "example": "GOOD"
                },
                "name": {
                    "description": "Имя",
                    "type": "string",
                    "example": "Сергей"
                },
                "past_attributes": {
                    "description": "Прошлые значения атрибутов контрагента PHYSICAL (если есть)",
                    "type": "array",
                    "items": {}
                },
                "patronymic": {
                    "description": "Отчество",
                    "type": "string",
                    "example": "Сергеевич"
                },
                "patronymic_qc": {
                    "description": "Код качества отчества. Примеры: MISPRINT Исправлена опечатка, NOT_SURE Сомнительное значение",
                    "type": "string",
                    "example": "MISPRINT"
                },
                "resident_flg": {
                    "description": "Признак: резидент",
                    "type": "string",
                    "example": "TRUE"
                },
                "service_start_date": {
                    "description": "Дата старта обслуживания",
                    "type": "string",
                    "example": "05.01.2022"
                },
                "snils": {
                    "description": "СНИЛС",
                    "type": "string",
                    "example": "111-222-333-44"
                },
                "snils_qc": {
                    "description": "Код качества СНИЛС. Примеры: GOOD Правильное значение, CONFIRMED_MANUALLY Подтверждено контролером",
                    "type": "string",
                    "example": "GOOD"
                },
                "sources": {
                    "description": "Исходные контрагенты: если текущая карточка является золотой (объединенный контрагент, образовавшийся в результате слияния двух или более исходных контрагентов)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/source.Source"
                    }
                },
                "surname": {
                    "description": "Фамилия",
                    "type": "string",
                    "example": "Мамонов"
                },
                "surname_qc": {
                    "description": "Код качества фамилии. Примеры: MISPRINT Исправлена опечатка, NOT_SURE Сомнительное значение",
                    "type": "string",
                    "example": "MISPRINT"
                }
            }
        },
        "party.PhysicalProspect": {
            "type": "object",
            "properties": {
                "attributes": {
                    "description": "Атрибуты контрагента PHYSICAL",
                    "type": "array",
                    "items": {}
                },
                "birthdate": {
                    "description": "Дата рождения",
                    "type": "string",
                    "example": "22.01.1987"
                },
                "birthdate_qc": {
                    "description": "Код качества даты рождения. Примеры: CONFIRMED_MANUALLY Подтверждено контролером; EDITED Правильное значение",
                    "type": "string",
                    "example": "EDITED"
                },
                "citizenship": {
                    "description": "Гражданство",
                    "type": "string",
                    "example": "Россия"
                },
                "firstname_qc": {
                    "description": "Код качества имени. Примеры: MISPRINT Исправлена опечатка, NOT_SURE Сомнительное значение",
                    "type": "string",
                    "example": "MISPRINT"
                },
                "full_name_raw_source": {
                    "description": "Исходное имя",
                    "type": "string",
                    "example": "Сергей Сергеевич Мамонов"
                },
                "fullname_qc": {
                    "description": "Код качества ФИО. Примеры: CONFIRMED_MANUALLY Подтверждено контролером; EDITED Правильное значение",
                    "type": "string",
                    "example": "EDITED"
                },
                "gender": {
                    "description": "Пол",
                    "type": "string",
                    "example": "MALE"
                },
                "gender_qc": {
                    "description": "Код качества пола. Примеры: OK_CHANGED Корректный, не совпадает с исходным, OK_NOT_CHANGED Корректный",
                    "type": "string",
                    "example": "OK_NOT_CHANGED"
                },
                "identifiers": {
                    "description": "Идентификаторы контрагента",
                    "allOf": [
                        {
                            "$ref": "#/definitions/party.Identifiers"
                        }
                    ]
                },
                "inn": {
                    "description": "ИНН",
                    "type": "string",
                    "example": "526317984689"
                },
                "inn_qc": {
                    "description": "Код качества ИНН. Примеры: GOOD Правильное значение, CONFIRMED_MANUALLY Подтверждено контролером",
                    "type": "string",
                    "example": "GOOD"
                },
                "name": {
                    "description": "Имя",
                    "type": "string",
                    "example": "Сергей"
                },
                "past_attributes": {
                    "description": "Прошлые значения атрибутов контрагента PHYSICAL (если есть)",
                    "type": "array",
                    "items": {}
                },
                "patronymic": {
                    "description": "Отчество",
                    "type": "string",
                    "example": "Сергеевич"
                },
                "patronymic_qc": {
                    "description": "Код качества отчества. Примеры: MISPRINT Исправлена опечатка, NOT_SURE Сомнительное значение",
                    "type": "string",
                    "example": "MISPRINT"
                },
                "prospect_type": {
                    "description": "Тип проспекта. Например OFR",
                    "type": "string",
                    "example": "OFR"
                },
                "resident_flg": {
                    "description": "Признак: резидент",
                    "type": "string",
                    "example": "TRUE"
                },
                "service_start_date": {
                    "description": "Дата старта обслуживания",
                    "type": "string",
                    "example": "05.01.2022"
                },
                "snils": {
                    "description": "СНИЛС",
                    "type": "string",
                    "example": "111-222-333-44"
                },
                "snils_qc": {
                    "description": "Код качества СНИЛС. Примеры: GOOD Правильное значение, CONFIRMED_MANUALLY Подтверждено контролером",
                    "type": "string",
                    "example": "GOOD"
                },
                "sources": {
                    "description": "Исходные контрагенты: если текущая карточка является золотой (объединенный контрагент, образовавшийся в результате слияния двух или более исходных контрагентов)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/source.Source"
                    }
                },
                "surname": {
                    "description": "Фамилия",
                    "type": "string",
                    "example": "Мамонов"
                },
                "surname_qc": {
                    "description": "Код качества фамилии. Примеры: MISPRINT Исправлена опечатка, NOT_SURE Сомнительное значение",
                    "type": "string",
                    "example": "MISPRINT"
                }
            }
        },
        "party.Vehicle": {
            "type": "object",
            "properties": {
                "attributes": {
                    "description": "Атрибуты контрагента PHYSICAL",
                    "type": "array",
                    "items": {}
                },
                "chassis_number": {
                    "description": "Номер шасси",
                    "type": "string",
                    "example": "0024536"
                },
                "identifiers": {
                    "description": "Идентификаторы контрагента",
                    "allOf": [
                        {
                            "$ref": "#/definitions/party.Identifiers"
                        }
                    ]
                },
                "past_attributes": {
                    "description": "Прошлые значения атрибутов контрагента PHYSICAL (если есть)",
                    "type": "array",
                    "items": {}
                },
                "sources": {
                    "description": "Исходные контрагенты: если текущая карточка является золотой (объединенный контрагент, образовавшийся в результате слияния двух или более исходных контрагентов)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/source.Source"
                    }
                },
                "vin": {
                    "description": "VIN-номер",
                    "type": "string",
                    "example": "XTA21053W17376550"
                },
                "vin_qc": {
                    "description": "Код качества VIN-номера. Примеры: NOT_CHANGED Значение проверено, EDITED Правильное значение",
                    "type": "string",
                    "example": "EDITED"
                }
            }
        },
        "party.VehicleProspect": {
            "type": "object",
            "properties": {
                "attributes": {
                    "description": "Атрибуты контрагента PHYSICAL",
                    "type": "array",
                    "items": {}
                },
                "chassis_number": {
                    "description": "Номер шасси",
                    "type": "string",
                    "example": "0024536"
                },
                "identifiers": {
                    "description": "Идентификаторы контрагента",
                    "allOf": [
                        {
                            "$ref": "#/definitions/party.Identifiers"
                        }
                    ]
                },
                "past_attributes": {
                    "description": "Прошлые значения атрибутов контрагента PHYSICAL (если есть)",
                    "type": "array",
                    "items": {}
                },
                "sources": {
                    "description": "Исходные контрагенты: если текущая карточка является золотой (объединенный контрагент, образовавшийся в результате слияния двух или более исходных контрагентов)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/source.Source"
                    }
                },
                "vin": {
                    "description": "VIN-номер",
                    "type": "string",
                    "example": "XTA21053W17376550"
                },
                "vin_qc": {
                    "description": "Код качества VIN-номера. Примеры: NOT_CHANGED Значение проверено, EDITED Правильное значение",
                    "type": "string",
                    "example": "EDITED"
                }
            }
        },
        "partyws.CloseAttributeByRawIdRequest": {
            "type": "object",
            "properties": {
                "attributeRawId": {
                    "description": "Attribute rawId. Unique inside party.",
                    "type": "string"
                },
                "attributeType": {
                    "description": "Type of attribute you want to close.",
                    "type": "string"
                },
                "partyIdentifier": {
                    "description": "Owner party identifier.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/partyws.WEssenceIdentifier"
                        }
                    ]
                }
            }
        },
        "partyws.CloseAttributeRequest": {
            "type": "object",
            "properties": {
                "attributeHid": {
                    "description": "Attribute identifier in CDI (HID).",
                    "type": "integer"
                },
                "attributeType": {
                    "description": "Type of attribute you want to close.",
                    "type": "string"
                },
                "flags": {
                    "description": "Additional custom flags.",
                    "type": "string"
                },
                "partyType": {
                    "description": "Type of party which owns attribute you want to close.",
                    "type": "string"
                }
            }
        },
        "partyws.FuzzySearchRequest": {
            "type": "object",
            "properties": {
                "include": {
                    "description": "Information types to include into response. SOURCES only by default.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/partyws.WInclude"
                        }
                    ]
                },
                "includePartyFields": {
                    "description": "Include fields to retrieved parties. Default value is 'false' if absent.",
                    "type": "boolean"
                },
                "includeRequestData": {
                    "description": "Information types of cleaned request data to include into response. Nothing by default.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/partyws.WInclude"
                        }
                    ]
                },
                "matchRules": {
                    "type": "object",
                    "properties": {
                        "rule": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "maxCount": {
                    "description": "Max retrieved party count.",
                    "type": "integer"
                },
                "minMatchScope": {
                    "description": "Minimal match scope of interest.",
                    "type": "integer"
                },
                "party": {
                    "$ref": "#/definitions/partyws.Party"
                },
                "relatedEssences": {
                    "type": "object",
                    "properties": {
                        "party": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/partyws.Party"
                            }
                        }
                    }
                }
            }
        },
        "partyws.FuzzySearchResponse": {
            "type": "object",
            "properties": {
                "matchedCounts": {
                    "$ref": "#/definitions/partyws.WMatchedPartyCounts"
                },
                "matchedParty": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.MatchedParty"
                    }
                },
                "party": {
                    "$ref": "#/definitions/partyws.Party"
                },
                "relatedEssences": {
                    "$ref": "#/definitions/partyws.RelatedEssences"
                }
            }
        },
        "partyws.GetByHIDRequest": {
            "type": "object",
            "properties": {
                "hid": {
                    "description": "Unique party identifier in CDI (HID).",
                    "type": "integer"
                },
                "include": {
                    "description": "Information types to include into response. includeRelations is ignored when this element is specified.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/partyws.WInclude"
                        }
                    ]
                },
                "includeRelations": {
                    "description": "Include relation in response. Default value is 'false' if absent.",
                    "type": "boolean"
                },
                "lastChangeTimestamp": {
                    "description": "Last changed timestamp.",
                    "type": "integer"
                },
                "onlySourceParty": {
                    "description": "Return source party",
                    "type": "boolean"
                },
                "partyType": {
                    "description": "Party type (if set then find by HID is performed only within parties of specified type).",
                    "type": "string"
                }
            }
        },
        "partyws.GetByHIDResponse": {
            "type": "object",
            "properties": {
                "notModified": {
                    "description": "TRUE when clients timestamp is actual and no need full party response.\nDefault value is 'false' if absent.",
                    "type": "boolean"
                },
                "party": {
                    "$ref": "#/definitions/partyws.Party"
                }
            }
        },
        "partyws.GetByRawIDRequest": {
            "type": "object",
            "properties": {
                "include": {
                    "description": "Information types to include into response. includeRelations is ignored when this element is specified.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/partyws.WInclude"
                        }
                    ]
                },
                "includeRelations": {
                    "description": "Include relation in response. Default value is 'false' if absent.",
                    "type": "boolean"
                },
                "lastChangeTimestamp": {
                    "description": "Last changed timestamp.",
                    "type": "integer"
                },
                "onlySourceParty": {
                    "description": "Return source party",
                    "type": "boolean"
                },
                "partyType": {
                    "description": "Party type (search is performed only within parties of specified type).",
                    "type": "string"
                },
                "rawId": {
                    "description": "Party identifier in source system.",
                    "type": "string"
                },
                "sourceSystem": {
                    "description": "Source system name.",
                    "type": "string"
                }
            }
        },
        "partyws.GetByRawIDResponse": {
            "type": "object",
            "properties": {
                "notModified": {
                    "description": "TRUE when clients timestamp is actual and no need full party response.\nDefault value is 'false' if absent.",
                    "type": "boolean"
                },
                "party": {
                    "$ref": "#/definitions/partyws.Party"
                }
            }
        },
        "partyws.MatchedParty": {
            "type": "object",
            "properties": {
                "matchRule": {
                    "description": "Match rule code.",
                    "type": "string"
                },
                "matchScope": {
                    "description": "Match scope.",
                    "type": "integer"
                },
                "party": {
                    "$ref": "#/definitions/partyws.Party"
                }
            }
        },
        "partyws.Party": {
            "type": "object",
            "properties": {
                "attribute": {
                    "description": "Party attributes.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.WAttribute"
                    }
                },
                "attributeRelation": {
                    "description": "Relations between attributes.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.WAttributeRelation"
                    }
                },
                "conflict": {
                    "description": "Data conflicts that stopped the update.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.WUpdateConflict"
                    }
                },
                "field": {
                    "description": "Party fields.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.WField"
                    }
                },
                "hid": {
                    "type": "integer"
                },
                "pastAttribute": {
                    "description": "Party attributes past values.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.WAttribute"
                    }
                },
                "rawId": {
                    "type": "string"
                },
                "relation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.Relation"
                    }
                },
                "source": {
                    "description": "Source parties for united party.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.WSourceParty"
                    }
                },
                "sourceSystem": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "partyws.RelatedEssences": {
            "type": "object",
            "properties": {
                "party": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.Party"
                    }
                }
            }
        },
        "partyws.Relation": {
            "type": "object",
            "properties": {
                "deleted": {
                    "type": "boolean"
                },
                "field": {
                    "description": "Relation fields.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.WField"
                    }
                },
                "first": {
                    "description": "First related essence.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/partyws.WRelationEdge"
                        }
                    ]
                },
                "hashcode": {
                    "type": "string"
                },
                "second": {
                    "description": "Second related essence.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/partyws.WRelationEdge"
                        }
                    ]
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "partyws.SaveRequest": {
            "type": "object",
            "properties": {
                "include": {
                    "description": "Information types to include into response.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/partyws.WInclude"
                        }
                    ]
                },
                "party": {
                    "$ref": "#/definitions/partyws.Party"
                },
                "updateType": {
                    "description": "Update type. Partial by default.",
                    "type": "string"
                }
            }
        },
        "partyws.SaveResponse": {
            "type": "object",
            "properties": {
                "party": {
                    "$ref": "#/definitions/partyws.Party"
                }
            }
        },
        "partyws.SearchRequest": {
            "type": "object",
            "properties": {
                "include": {
                    "description": "Information types to include into response. REQUISITE only by default.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/partyws.WInclude"
                        }
                    ]
                },
                "maxCount": {
                    "description": "Throw error when query is going to return more than maxCount results.",
                    "type": "integer"
                },
                "partyType": {
                    "description": "Party type (if present than search is performed only within parties of specified type).",
                    "type": "string"
                },
                "query": {
                    "description": "Search query.",
                    "type": "string"
                },
                "restriction": {
                    "description": "Additional search filter (restriction)",
                    "type": "string"
                }
            }
        },
        "partyws.SearchResponse": {
            "type": "object",
            "properties": {
                "party": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.Party"
                    }
                }
            }
        },
        "partyws.WAttribute": {
            "type": "object",
            "properties": {
                "deleted": {
                    "type": "boolean"
                },
                "field": {
                    "description": "Attribute fields.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.WField"
                    }
                },
                "hid": {
                    "type": "integer"
                },
                "rawId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "partyws.WAttributeRelation": {
            "type": "object",
            "properties": {
                "deleted": {
                    "type": "boolean"
                },
                "first": {
                    "description": "First attribute.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/partyws.WAttributeRelationEdge"
                        }
                    ]
                },
                "hid": {
                    "type": "integer"
                },
                "second": {
                    "description": "Second attribute.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/partyws.WAttributeRelationEdge"
                        }
                    ]
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "partyws.WAttributeRelationEdge": {
            "type": "object",
            "properties": {
                "hid": {
                    "type": "integer"
                },
                "rawId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "partyws.WEssenceIdentifier": {
            "type": "object",
            "properties": {
                "hid": {
                    "type": "integer"
                },
                "rawId": {
                    "type": "string"
                },
                "sourceSystem": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "partyws.WField": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "partyws.WInclude": {
            "type": "object",
            "properties": {
                "partyInfo": {
                    "description": "List of information types.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.WPartyInfo"
                    }
                }
            }
        },
        "partyws.WMatchedPartyCounts": {
            "type": "object",
            "properties": {
                "guaranteed": {
                    "description": "Matched party count with guaranteed rules.",
                    "type": "integer"
                },
                "potential": {
                    "description": "Matched party count with potential rules.",
                    "type": "integer"
                }
            }
        },
        "partyws.WPartyInfo": {
            "type": "string",
            "enum": [
                "REQUISITE",
                "ATTRIBUTE",
                "SOURCE",
                "RELATION",
                "PAST_ATTRIBUTE",
                "ALL_PARTY"
            ],
            "x-enum-varnames": [
                "WPartyInfoREQUISITE",
                "WPartyInfoATTRIBUTE",
                "WPartyInfoSOURCE",
                "WPartyInfoRELATION",
                "WPartyInfoPAST_ATTRIBUTE",
                "WPartyInfoALL_PARTY"
            ]
        },
        "partyws.WRelationEdge": {
            "type": "object",
            "properties": {
                "field": {
                    "description": "Fields of related partyy.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.WField"
                    }
                },
                "hid": {
                    "type": "integer"
                },
                "rawId": {
                    "type": "string"
                },
                "source": {
                    "description": "Source parties for united party.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.WSourceParty"
                    }
                },
                "sourceSystem": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "partyws.WSourceParty": {
            "type": "object",
            "properties": {
                "field": {
                    "description": "Party fields.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/partyws.WField"
                    }
                },
                "hid": {
                    "type": "integer"
                },
                "rawId": {
                    "type": "string"
                },
                "sourceSystem": {
                    "type": "string"
                }
            }
        },
        "partyws.WUpdateConflict": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "rawId": {
                    "type": "string"
                },
                "sourceSystem": {
                    "type": "string"
                }
            }
        },
        "search.BlacklistResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/party.Blacklist"
                    }
                }
            }
        },
        "search.ContractResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/party.Contract"
                    }
                }
            }
        },
        "search.EgrPhysicalResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/party.EgrPhysical"
                    }
                }
            }
        },
        "search.EgrResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/party.Egr"
                    }
                }
            }
        },
        "search.FuzzyRequest": {
            "type": "object",
            "required": [
                "party_type"
            ],
            "properties": {
                "assured": {
                    "description": "Гарантированный поиск; draft-поле, в запросах к CDI не используется",
                    "type": "boolean",
                    "example": true
                },
                "birthdate": {
                    "description": "День рождения",
                    "type": "string",
                    "example": "03.12.1987"
                },
                "creator_value": {
                    "description": "Идентификатор агента; draft-поле, в запросах к CDI не используется",
                    "type": "string",
                    "example": "123456"
                },
                "max_count": {
                    "description": "Максимальное число найденных совпадений",
                    "type": "integer",
                    "default": 10,
                    "maximum": 2000,
                    "minimum": 1,
                    "example": 10
                },
                "min_match_scope": {
                    "description": "Коэффициент минимального соответствия",
                    "type": "integer",
                    "example": 80
                },
                "name": {
                    "description": "Имя",
                    "type": "string",
                    "example": "Сергей"
                },
                "party_type": {
                    "description": "Тип контрагента (PartyType). Например PHYSICAL, PHYSICAL_PROSPECT",
                    "type": "string",
                    "example": "PHYSICAL"
                },
                "patronymic": {
                    "description": "Отчество",
                    "type": "string",
                    "example": "Сергеевич"
                },
                "prospect_type": {
                    "description": "Тип проспекта. Например OFR",
                    "type": "string",
                    "example": "OFR"
                },
                "raw_phone": {
                    "description": "Телефон",
                    "type": "string",
                    "example": "8-495-354-23-44"
                },
                "surname": {
                    "description": "Фамилия",
                    "type": "string",
                    "example": "Мамонов"
                }
            }
        },
        "search.LegalResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/party.Legal"
                    }
                }
            }
        },
        "search.PhysicalProspectResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/party.PhysicalProspect"
                    }
                }
            }
        },
        "search.PhysicalResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/party.Physical"
                    }
                }
            }
        },
        "search.Request": {
            "type": "object",
            "required": [
                "party_type"
            ],
            "properties": {
                "birthdate": {
                    "description": "День рождения",
                    "type": "string",
                    "example": "03.12.1987"
                },
                "creator_value": {
                    "description": "Идентификатор агента; draft-поле, в запросах к CDI не используется",
                    "type": "string",
                    "example": "123456"
                },
                "inn": {
                    "description": "ИНН",
                    "type": "string",
                    "example": "1233554466"
                },
                "license_plate": {
                    "description": "Государственный регистрационный знак",
                    "type": "string",
                    "example": "A123EK78"
                },
                "max_count": {
                    "description": "Максимальное число найденных совпадений",
                    "type": "integer",
                    "default": 10,
                    "maximum": 2000,
                    "minimum": 1,
                    "example": 10
                },
                "name": {
                    "description": "Имя",
                    "type": "string",
                    "example": "Сергей"
                },
                "party_type": {
                    "description": "Тип контрагента (PartyType). Например PHYSICAL, PHYSICAL_PROSPECT",
                    "type": "string",
                    "example": "PHYSICAL"
                },
                "passport_number": {
                    "description": "Номер паспорта",
                    "type": "string",
                    "example": "672184"
                },
                "passport_series": {
                    "description": "Серия паспорта",
                    "type": "string",
                    "example": "45 07"
                },
                "patronymic": {
                    "description": "Отчество",
                    "type": "string",
                    "example": "Викторович"
                },
                "policy_number": {
                    "description": "Номер полиса",
                    "type": "string",
                    "example": "0258409254"
                },
                "policy_series": {
                    "description": "Серия полиса",
                    "type": "string",
                    "example": "AAA"
                },
                "raw_email": {
                    "description": "Электронная почта",
                    "type": "string",
                    "example": "mamon@gazprom.ru"
                },
                "raw_phone": {
                    "description": "Телефон",
                    "type": "string",
                    "example": "8-495-354-23-44"
                },
                "surname": {
                    "description": "Фамилия",
                    "type": "string",
                    "example": "Мамонов"
                },
                "vehicle_vin": {
                    "description": "VIN",
                    "type": "string",
                    "example": "5N3AA08C56N807435"
                }
            }
        },
        "search.VehicleProspectResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/party.VehicleProspect"
                    }
                }
            }
        },
        "search.VehicleResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/party.Vehicle"
                    }
                }
            }
        },
        "source.Identifiers": {
            "type": "object",
            "properties": {
                "hid": {
                    "description": "Уникальный идентификатор источника в Едином клиенте (HID)",
                    "type": "integer",
                    "example": 24561024
                },
                "raw_id": {
                    "description": "Идентификатор (RawId) в исходной системе",
                    "type": "string",
                    "example": "123e4567-e89b-12d3"
                },
                "source_system": {
                    "description": "Код исходной системы",
                    "type": "string",
                    "example": "GWPC"
                }
            }
        },
        "source.Source": {
            "type": "object",
            "properties": {
                "identifiers": {
                    "description": "Идентификаторы источника",
                    "allOf": [
                        {
                            "$ref": "#/definitions/source.Identifiers"
                        }
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}